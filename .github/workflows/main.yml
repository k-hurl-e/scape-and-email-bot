name: Job Alert Bot

on:
  schedule:
    - cron: '0 7 */3 * *'  # Runs every 3 days at 7:00 AM
  workflow_dispatch:  # Allows you to manually trigger the workflow

jobs:
  run-job-alert:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install -y ./google-chrome-stable_current_amd64.deb
        google-chrome --version

    - name: Install ChromeDriver
      run: |
        # Extract the Chrome version and log it for debugging
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        echo "Detected Chrome version: $CHROME_VERSION"
        
        # Try to get the corresponding ChromeDriver version
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        
        # Debugging: log the ChromeDriver version or an error message
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Failed to retrieve ChromeDriver version for Chrome $CHROME_VERSION. Falling back to the latest version."
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        else
          echo "Detected ChromeDriver version: $CHROMEDRIVER_VERSION"
        fi
        
        # Download and install ChromeDriver
        wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version


    - name: Run the Job Alert Bot
      env:
        SCRAPE_URL: ${{ secrets.SCRAPE_URL }}
        API_KEY: ${{ secrets.API_KEY }}
        MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      run: |
        python NYFA_jobalerts.py
